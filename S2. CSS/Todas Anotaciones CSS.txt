			1. Introduccion Universidad Desarrollo Web

1. Introduccion a CSS
CSS nos va a permitir mejorar visualmente nuestra paginas HTML. Por un lado HTML tiene como objetivo agregar la estructura de nuestra pagina web, por otro lado CSS va a mejorar visualmente estas etiquetas HTML.

-----------------------------------------------------------------------

2. Formas de aplicar estilos CSS
Como vimos en el curso de HTML podemos mejorar visualmente las etiquetas HTML directamente dentro de nuestro archivo HTML con la etiqueta style (Internal CSS), tambien podemos aplicarlo dentro de nuestras tags o, como una buena practica, utilizar un archivo dedicado a los estilos css y vincularlos con el atributo id (normalmente utilizado para realizar bookmarks o a un solo elemento de nuestra pagina) o el atributo class.

Los estilos que toman prioridad son los del ultimo scope que tome el CSS, es decir, del scope mas general (un archivo css -> External CSS) al scope local (CSS aplicado al tag -> Inline CSS). Lo mismo ocurre dentro del estilo CSS, si escribi una etiqueta, por ejemplo h1, dos veces, va a tomar la ultima coincidencia. -> Esto ocurre con los ATRIBUTOS que sobreescriba, no con la etiqueta en si (si tengo font-size y color en general y un scope local solo con color aplica el font-size y sobreescribe el color).
Con el atributo !important despues del estilo declarado podemos romper esta relacion de scopes (ej: color:aqua !important).

-----------------------------------------------------------------------

3. Selector ID en CSS
El selector ID nos va a permitir modificar con CSS un elemento HTML (en realidad puede funcionar como una clase, pero no es lo recomendable) que es unico en nuestra pagina. (por ejemplo un unico h1).
El nombre del id inicia con un #.

-----------------------------------------------------------------------

4. Clases en CSS
Si queremos aplicar CSS a uno o mas elementos HTML utilizaremos el concepto de clases en CSS. Podemos aplicar varias clases a elementos HTML simplemente separando con espacios los nombres dentro del atributo class.
El nombre de una clase inicia con un . y no puede contener caracteres numericos al comienzo del nombre.

-----------------------------------------------------------------------

5. Selector universal en CSS
Si queremos aplicar algun estilos CSS a toda nuestra pagina HTML tenemos un selector universal.
Este selector se identifica con el caracter *.

-----------------------------------------------------------------------

6. Agrupar selectores en CSS
Vamos a ver como agrupar elementos HTML si vamos a aplicar los mismos estilos a varios elementos HTML o tambien clases o selectores. Podemos combinarlos y agruparlos.
Ejemplo: h2, h3{//contenido}
-----------------------------------------------------------------------

6. Subclases en CSS
p.centrar{} -> Primero se selecciono el elemento y posteriormente le aplico el estilo CSS que va a ser UNICO para ese elemento que seleccione. La clase sera solamente reutilizable para esa clse que especifique al comienzo.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			2. Colores, Bordes y más en CSS

1. Colores por nombre en CSS
Tenemos 140 colores definidos por nombres en HTML (https://htmlcolorcodes.com/es/nombres-de-los-colores/).
Tambien podemos agregar colores con codigo Hexadecimal o RGB.

Puedo agrupar clases para que se aplique un mismo estilo poniendo el nombre de la clase, separado con una coma. Ej:
.rojo(clase), .rosa(clase), .violeta(clase){
    color: white;
}
-----------------------------------------------------------------------

2. Colores y Bordes en CSS
Haciendo click en el color HTML podemos modificar/acceder al color en RGB y Hexadecimal.
Algunas propiedades de los bordes en CSS: https://www.w3schools.com/css/css_border.asp
Para indicar una unidad de medicion NO se debe dejar espacios en su declaracion (1px - 1 px <-NO)
-----------------------------------------------------------------------

3. Manejo de Bordes en CSS
Pagina de referencia para ver el tipo de bordes disponibles en CSS: https://www.w3schools.com/css/css_border.asp
border es una propiedad que simplifica otras propiedades, por ejemplo border contiene la propiedad border-style, border-color, border-width, etc.
Podemos mixear bordes segun nuestra conveniencia, seguirá el orden: arriba-derecha-abajo-izquierda.
-----------------------------------------------------------------------

4. Ancho de Bordes con CSS
Podemos aplicar distintos grosores a los bordes de CSS.
Si queremos aplicar 4 bordes de distinto tamaño utilizaremos el siguiente formato: superior-derecha-inferior-izquierda.
Si queremos aplicar 3 bordes de distinto tamaño utilizaremos el siguiente formato: superior-DerechaIzquierda-inferior.
Si queremos aplicar 2 bordes de distinto tamaño utilizaremos el siguiente formato: SuperiorInferior-DerechaIzquierda.
Tenemos las propiedades thin, medium y thick como propiedades de tamaños definidas en CSS.
-----------------------------------------------------------------------

5. Codigos de Colores en Bordes CSS
Si bien con la propiedad de border (que engloba otras propiedades) podemos aplicar color, tambien tenemos la propiedad border-color. Al igual que con el width, podemos jugar con el color superior-inferior-izquierda-derecha de nuestro ancho.
Al igual que con bordes, se mantiene el mismo criterio para los lados.
Si queremos aplicar 4 bordes de distinto color utilizaremos el siguiente formato: superior-derecha-inferior-izquierda.
Si queremos aplicar 3 bordes de distinto color utilizaremos el siguiente formato: superior-DerechaIzquierda-inferior.
Si queremos aplicar 2 bordes de distinto color utilizaremos el siguiente formato: SuperiorInferior-DerechaIzquierda.
-----------------------------------------------------------------------

6. Redondeo de Bordes en CSS
Comparte los mismo criterios que los 2 anteriormente vistos.
Si queremos aplicar 4 redondedo bordes de distintos utilizaremos el siguiente formato: SuperiorIzquierdo-SuperiorDerecha-InferiorDerecha-InferiorIzquierda.
Si queremos aplicar 3 redondedo bordes de distintos utilizaremos el siguiente formato: SuperiorIzquierdo-SuperiorDerechaInferiorIzquierda-InferiorDerecha.
Si queremos aplicar 2 redondedo bordes de distintos utilizaremos el siguiente formato: SuperiorIzquierdoInferiorDerecha-SuperiorDerechaInferiorIzquierda.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			3. Box Model en CSS

1. Box Model en CSS
Cualquier elemnto HTML esta compuesto por Box Model. Es una "caja" que se compone, de adentro hacia afuera, de los siguientes elementos: contenido-padding-border-margin. Cada uno de estos elementos que rodean al contenido tiene un width de alto y ancho.
El padding y margin son transparentes, y el border puede tener color.
Para calcular el alto y ancho de nuestro contenido HTML debemos tener en cuenta estos 4 elementos.
-----------------------------------------------------------------------

2. Ancho Elementos Box Model en CSS
Al unico elemento que le podemos agregar color es al borde. El margin y padding son transparentes
A nuestro elemento HTML le podemos asignar un ancho y un alto para predefinar cuanto lugar va a ocupar en pantalla.
-----------------------------------------------------------------------

3. Outline en CSS
Entre el margen y el borde tenemos un concepto que se llama outline. Asi que tambien podemos establecer un outline entre el borde y el margen, tambien podemos manipular el color. Con este concepto no debemos sumar los pixeles que establezcamos para el ancho y alto del elemento. 
Funciona y es parecido en terminos de propiedades al border (No puede combinar ciertas propiedades).

No debemos sumarlo al ancho y/o alto de nuestro Box Model porque el outline va a ocupar parte de los pixeles del margen (Salvo que tenga un margen de 20px y un outline de 30px)

Si me paso de outline con respecto al margo, el color que haya elegido va a solapear/superponer a los otros contenidos que coincidan en la pagina. Tampoco va a ocupar espacio como elemento de linea en HTML, el oultine estaria fuera del rango del elemento.
-----------------------------------------------------------------------

4. Outline Offset en CSS
Podemos establecer un espacio entre nuestro concepto de outline y el border. 
Para ello utilizaremos la propiedad de outline-offset.
Al igual que la parte 3, existen restricciones con respecto a las propiedades en comparacion a border (todas las propiedades son seteadas de manera global, no se puede personalizar superior-derecha-inferior-izquierda).
No podemos asignar un color, de por sí es transparente.
-----------------------------------------------------------------------

5. Padding en CSS
El padding es posible personalizarlo de manera superior-derecha-inferior-izquierda.
Si queremos aplicar 4 paddings distintos utilizaremos el siguiente formato: superior-derecha-inferior-izquierda.
Si queremos aplicar 3 paddings distintos utilizaremos el siguiente formato: superior-DerechaIzquierda-inferior.
Si queremos aplicar 2 paddings utilizaremos el siguiente formato: SuperiorInferior-DerechaIzquierda.
-----------------------------------------------------------------------

6. Box Sizing en CSS
Para no pasarnos del ancho en el outline y no generar problemas de superposicion podemos agregar la propiedad de box-sizing.
Con la prpiedad border-box ya no hace falta calcular el ancho y alto, la misma propiedad va a calcularla y va a ajustar nuestro elemento a los pixeles que tenga dentro de los 4 elementos de Box Model.
-----------------------------------------------------------------------

7. Propiedad max-width-height en CSS
Si un elemento tiene X cantidad de width (ancho) y achicamos la pantalla hasta pasar a una resolucion menor al width indicado tendremos una barra de scroll horizontal en el navegador web.
The max-width property in CSS is used to define the maximum width of an element. The value of the width cannot be larger than the value by max-width. If the content is larger than the max-width then it will go to the next line and if the content is smaller than max-width then it has no effect. (https://www.geeksforgeeks.org/css-max-width-property/)
-----------------------------------------------------------------------

8. Propiedad margin: auto para centrar elementos en CSS
Esta propiedad es muy recurrente para centrar elementos independientemente de la resolucion de pantalla del equipo que este visualizando la pagina web.
Tambien podemos aplicar las reglas de superior-derecha-inferior-izquierda, superior-DerechaIzquierda-inferior y SuperiorInferior-DerechaIzquierda a la propiedad de margin.
-----------------------------------------------------------------------

9. Propiedad inherit en CSS
Esta propiedad nos permite heredar de otras propiedades declaradas en una clase CSS. La herencia funciona como una mamushka. En el ejemplo de nuestro div podemos heredar del margen ya que es el elemento externo mas cercano que tiene declarado este elemento.
-----------------------------------------------------------------------

10. Concepto de margin collapse en CSS
Los margenes superiores e inferiores a veces pueden colapsar entre elementos, es decir, se juntan ambos margenes y provocar una "colisión".
Es posible que el margen del elemento inferior que colisiona con el elemento superior fusione estos margenes dependiendo del tamaño del cual sea mayor.
Insepccionar ambos elementos en el navegador.
Mas informacion: https://www.w3schools.com/css/css_margin_collapse.asp

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			4. Manejo de Colores en CSS

1. Manejo de Colores en CSS
Existen 140 tipos de colores por nombre en HTML.
Fuente: https://htmlcolorcodes.com/es/
Con la propiedad de float vamos a poder flotar los elementos uno al lado del otro de izq/der (siempre que haya espacio) en lugar de ponerse de manera vertical cada elemento. Se vera mas adelante bien en profundidad.
-----------------------------------------------------------------------

2. Codigo de colores RGB en CSS
Los colores RGB se componen por Red Green y Blue, nos permite una gama de ~16M de colores distintos.
En RGBA la A sera el alpha, es decir, la transparencia que tendra nuestro color RGB. El Alpha va de 1 a 0, admite obviamente numeros flotantes.
-----------------------------------------------------------------------

3. Código de colores Hexadecimal en CSS
El codigo hexadecimal se compone de 16 digitos (0-1-2-3-4-5-6-7-8-9-A-B-C-D-E-F).

El codigo debe comenzar por el simbolo #, continuado por los 6 digitos que componen dicho codigo.
Los 6 digitos se componen de manera parecida al RGB (#RRGGBB).
Si nuestros digitos RRGGBB se componen del mismo simbilo hexadecimal podemos obviar el 2do digito de la composición anteriormente nombrada, si por ejemplo tuviesemos RRGGBB (ffffff) podriamos poner RGB (fff). Simplificamos pares.

Tambien podemos aplicar transparencia a nuestro codigo hexadecimal. Esto funciona agregando un par mas de digitos al codigo hexadecimal.
-----------------------------------------------------------------------

4. Código de colores HSL en CSS
HSL es un acronimo para Hue-Saturation-Lightness. Se compone de colores del 0-360, Saturation del 0-100% y Lightness del 0-100%
Fuente de consulta: https://purple11.com/static/fed42130c194b0c240a4ec10408adf97/8282f/hsl-cover-2.png

Tambien podemos aplicar transparencia, funciona de igual manera al rgb.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			5. Manejo de Fondos (background) en CSS

1. Manejo de Fondos en CSS
Con la propiedades background-image, con la funcion url podemos darle el path interno/externo a nuestra imagen.

Es importante saber que solo aplicando esta propiedad la imagen no se va ajustar a la resolucion de pantalla del dispositivo que este visualizandola, se duplicará la imagen para llenar el fondo X cantidad de veces.
Para cambiar el comportamiento debemos utilizar la propiedad background-repeat: (opcion que nos sea coveniente).
Se recomienda aplicar un color de fondo para que si la imagen no se repite se ponga un color acorde a la imagen del fondo.
-----------------------------------------------------------------------

2. Manejo de fondos en CSS - parte 2
Tambien podemos aplicar imagenes de fondo a cualquier elemento HTML.
Podemos cambiar el posicionamiento inicial de nuestra imagen con background-position: (opcion).
La propiedad background-attachament cambia el comportamiento de nuestro fondo al hacer zoom. background-attachament: fixed; Va a mantener la imagen fija al hacer scroll en la pantalla.

La propiedad background engloba muchas de estas propiedades que vimos anteriormente.
Ejemplo: background: dodgerblue url("../img/fondo.png") no-repeat right top;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			6. Manejo de Texto en CSS

1. Formato de Texto en CSS
Para dar formato al texto podemos cambiar la fuente, agregar sombreado, subrayado, espacio entre lineas, espacio entre palabras, espacio entre las letras, etc.

Con la propiedad text-transform podemos indicar que tipo de formato (mayus, minus, mayus y minus) queremos para nuestro cuerpo de texto.
La propiedad text-shadow genera una sombre para nuestro texto con el formato EjeX-EjeY-Blur-Color.
La propiedad letter-spacing nos permite separar las letras entre sí, para darle un mayor espaciado. Permite tanto valores positivos como negativos.
La propiedad word-spacing nos permite separar las palabras entre sí, para darle un mayor espaciado. Permite tanto valores positivos como negativos.
La propiedad text-align nos permite poner mover el contenido hacia la izquierda, derecha, centro o justificarlo, entra otras cosas. Funciona como en WORD cuando queremos centrar un texto, o ponerlo hacia la izquierda, etc.
La propiedad direction marca como empezara el texto.
La propiedad text-decoration es mayormente utilizada en links, nos permite subrayar el texto, tacharlo, entre otras cosas.
La propiedad text-indent va a agregar sangría al comienzo de nuestro parrafo.
La propiedad line-height sirve para separar las lineas, por defecto es 1.2. No hace falta utilizar una medida ya que es un valor que se va a tomar de manera proporcional segun el tipo de fuente que hayamos seleccionado.
La propiedad white-space tiene varios atributos accesibles, entre ellos el nowrap, que permite romper la caja contenedora del texto y salirse de si misma.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			7. Fuentes en CSS

1. Manejo de Fuentes en CSS
Existen varias familias de fuentes y clasificaciones.
La familia serif se clasifica por ser mas sofisticadas y tener redondeos en sus letras. Dan mas formalidad y elegancia.
La familia sans-serif se clasifica por ser mas milimalista y simplificada. Da mas modernidad.
La familia monospace se clasifica por ser utilizada para dar un aspecto mas de "maquina de escribir".
La familia cursive se clasifica por ser de escritura cursiva.

La propiedad font-family nos despliega una lista de fuentes de la misma familia, muy parecias en tipos. Si una falla o no esta disponible en el navegador web continua con la siguiente en la lista (De la mas especifica a la mas generica). Si el nombre de la fuente es compuesto, debemos utilizar comillas para indicar el nombre, de lo contrario no hace falta. 
Ejemplo: font-family: 'Times New Roman', Times, serif;
-----------------------------------------------------------------------

2. Estilos de Fuentes en CSS
Con la propiedad font-family podemos aplicar, como en word, que la letra sea del tipo normal, italic, bold, oblique, etc.
Con la propiedad font-weight podemos darle un ancho a nuestra fuente
La propiedad font-variant es para especificar si queremos que nuestra fuente se muestre en mayusculas, pero con el concepto de small caps
-----------------------------------------------------------------------

3. Tamaño Fuentes en CSS
La propiedad font-size nos permite incrementar o decrementar el tamaño de la fuente que estamos utilizando.
Podemos utilizar diferentes tipos de medidas o los parametros por defecto que nos provee el CSS(large, small, etc).
Lo comun en pixeles es de 16px en navegadores.
Una unidad de em (1em) es igual a 16px.
Otras unidades: https://devcode.la/tutoriales/unidades-vh-vw-css/
-----------------------------------------------------------------------

4. Google Fonts en CSS
Si no queremos utilizar ninguna de las fuentes que nos provee CSS, podemos utilizar fuentes de google -> https://fonts.google.com/.
Utilizar fuentes externas ubicadas en internet son mas lentas para cargar y mas permeable a errores. Podemos descargar las fuentes y vincularlas al CSS para no causar estos problemas.

Google fonts nos provee de uno o mas tags <link> para vincular la biblioteca de la fuente a nuestro HTML/CSS o podemos utilizar el @import de google para vincularlo a nuestro CSS (al principio dela archivo) directamente quitando el elemento de style. Se deja este elemento si vamos a utilizarlo dentro de una etiqueta.
El mismo google fonts nos dice como utilizarlo en nuestro CSS debajo del vinculo que nos provee -> CSS rules to specify families.

Al dia del realizado el curso estamos utilizando la segunda version de google fonts (css2 en el link) pero podemos importar datos de la primera version de google fonts.
La primera version permitia utilizar efectos, los cuales se pueden ver en la documentacion.
Guia: v1 -> https://developers.google.com/fonts/docs/getting_started | v2 -> https://developers.google.com/fonts/docs/css2
-----------------------------------------------------------------------

5. Atributo font en CSS
Podemos poner todas las propiedades de fonts que vimos en un prinicipo en una sola linea.
El orden es el siguiente: (font-style font-variant font-weight *font-size/line-height *font-family) | * -> Elementos requeridos si o si.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			8. Iconos en CSS

1. Iconos de Bootstrap en CSS
¿Que es Boostrap? Bootstrap es una biblioteca multiplataforma o conjunto de herramientas de código abierto para diseño de sitios y aplicaciones web. Contiene plantillas de diseño con tipografía, formularios, botones, cuadros, menús de navegación y otros elementos de diseño basado en HTML y CSS, así como extensiones de JavaScript adicionales. A diferencia de muchos frameworks web, solo se ocupa del desarrollo front-end.

Pagina de Iconos: https://icons.getbootstrap.com/ - Se puede utilizar a través de la instalación por npm, descargar por zip o importar a nuestro CSS o HTML con un link (CDN: Content Delivery Network) al igual que haciamos con las Google Fonts. 

Para utilizar un icono vamos a utilizar el tag <i> y lo vamos a asociar con la clase que queremos de nuestro Bootstrap.
Podemos importar un svg para personalizar aún mas el archivo (cambiarle el color, tamaño, etc) o hacerlo directamente en el css o etiqueta HTML.
-----------------------------------------------------------------------

2. Iconos de Google en CSS
Su vinculacion funciona de la misma manera que Bootstrap.
Pagina de Iconos: https://fonts.google.com/icons - https://developers.google.com/fonts/docs/material_icons

A diferencia de Bootstrap, vamos a indicar el icono que queremos no como parte de una clase sino como parte de valor del tag icono. Ejemplo: <i class="material-icons">search</i>.
La tag va a depender del icono. Google nos provee con el tag ya pre fabricado para importar.

La propiedad Vertical-align nos permite alinear los elementos a un mismo eje X.
-----------------------------------------------------------------------

3. Iconos de Ionic en CSS
¿Que es Ionic? Ionic es un SDK front-end de código abierto para desarrollar aplicaciones móviles híbridas que utilizan tecnologías web como HTML, CSS y JavaScript. Proporciona componentes basados ​​en tecnología web optimizada para dispositivos móviles, así como API nativas que utilizan Cordova e Ionic Native.

Pagina de iconos: https://ionic.io/ionicons - En la solapa Usage esta todo lo que debemos saber para utilizar correctamente el framework.

-----------------------------------------------------------------------

4. Generalidades
Recordemos que mientras mas vinculos de este tipo tengamos en nuestra pagina web, la pagina se vuelve mas pesada para cargar en el usuario.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			9. Display  en CSS

1. Propiedad Display en CSS
La propiedad display en CSS nos va a permitir mostrar u ocultar elementos o también modificar la forma en que se muestran algunos elementos HTML.

Los elementos div, hX, p, listas entre otros tiene en comun que su propiedad es display: block;
Los elementos span, anchor, links, imagenes entre otros son un elementos inline.
display: block; -> Cada uno de estos elementos va a ocupar una nueva linea por completo.
display: inline; -> El elemento no ocupa una nueva linea, simplemente continua a partir del otro elemento.

Si queremos ocultar algun elemento HTML y que no ocupe espacio podemos hacer un display: none;
Si queremos ocultar algun elemento HTML y que siga ocupando espacio podemos hacer: visibility: hidden;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			10. Posicionamiento de Elementos con CSS

1. Centrar elementos de tipo Div con CSS
Una ventaja de utilizar porcentajes y no pixeles es que se adapta a la resolucion de pantalla en la cual se despliega el navegador.
-----------------------------------------------------------------------

2. Posicionamiento en CSS
Existen 5 tipos de posicionamientos en CSS: static, relative, fixed, absolute y sticky.
Por defecto todos los elementos de tipo div son estaticos. Las propiedades top, bottom, left y right no se aplican a los elementos estaticos, si a los demas.

Al utilizar las propiedades top, left, bottom y right tenemos que tener en cuenta que no afectará al posicionamiento de los demas elementos que pongamos a continuacion. 

La posicion static matendra el div en la posicion por default, sin poder modificar su posicion.
La posicion relative mantendra el div en la posicion por default o la que le indiquemos en el CSS. 
La posicion fixed se va a colocar de manera relativa al viewport. Se va a mantener de manera fija en la posicion de pantalla que le indicamos/que tiene por default. Si tenemos un scroll vertical y utilizamos el scroll, este elemento va a bajar conforme se utilice la barra de scroll.
La posicion absolute es similar a la static, se utiliza normalmente cuando estamos trabajando dentro de otro elemento de tipo div. El absolute se va a posicionar de manera "absoluta", pero teniendo en cuenta el elemento que lo contiene. Si no lo contiene ningún elemento se va a tomar en cuenta el body (En este caso, si solo tiene el body es una buena practica utilizar el default). El absolut no funciona si su div padre es static. Se va comportar como un elemento de linea.
La posicion sticky se caracteriza por tener que usar alguna de las propiedades de top, left, bottom, right. Se posiciona como un elemento de manera relativa y a la hora de mover la pantalla se utiliza como un elemento de manera fixed. Si trabajamos con safari debemos tener en cuenta una correccion, debemos agregar position: -webkit-sticky;. La posicion sticky no funciona en Internet Explorer
-----------------------------------------------------------------------

3. z-index en CSS
Hasta ahora trabajamos con el eje de X (horizontal) y el eje Y (vertical). El eje Z representa las capas de profundidad de un elemento dado.
En el eje Z se van a ir supernoniendo los elementos segun coincidan y segun el orden en que se van agregando se van a ir supernoniendo. Sin embargo, la superposicion va a depender de varios factores. Los elementos static son elementos no posicionados, en cambio cuando es diferente la propiedad decimos que son posicionados. Por default se agregan de manera automatica pero podemos personalizarlo (tanto negativo como positivo), tambien podemos personalizar tamaño del z-index. 

La propiedad CSS z-index indica el orden de un elemento posicionado y sus descendientes. Cuando varios elementos se superponen, los elementos con mayor valor z-index cubren aquellos con menor valor. - https://developer.mozilla.org/es/docs/Web/CSS/z-index
----------------------------------------------------------------------- 
4. Propiedad overflow en CSS
El concepto de Overflow en CSS ocurre cuando tenemos un contenido que supera el ancho de nuestro contenedor. Solamente la podemos trabajar si especificamos un alto/height de nuestro contenedor (se necesita un limitante vertical). 
La propiedad por default es overflow: visible; Que mostrara el contenido que supera el contenedor.
La propiedad overflow: hidden; Todo lo que se sale del contenedor se ocultará.
La propiedad overflow: scroll; Generara un scroll para poder moverse de manera vertical y/o horizontal y visualizar todo el contenido.
La propiedad overflow: auto; Si se necesita un scroll se genera automaticamente de manera vertical y/o horizontal.

Las mismas propiedades aplican para overflow-x u overflow-y, de necesitar especificamente un eje.

----------------------------------------------------------------------- 
5. Float en CSS
En ocasiones es necesario acomodar nuestros elementos de manera flotada. Esto nos permite agregar muchos elementos en una sola. Cuando no tiene mas espacio disponible para agrupar los elementos flotados genera una nueva linea. "La propiedad float se comporta globalmente y no en el scope" -> No se si es así realmente, averiguar.
Si queremos que los demas elementos que siguen ya no esten flotando vamos a utilizar la propiedad clear indicando si queremos limpiar el lado izquierdo, derecho o ambos.
----------------------------------------------------------------------- 

6. Propiedad Display Inline-Blocke en CSS
Ya trabajamos con propiedades display inline y block, esta propiedad es combinada de ambas. La utilizaremos para combinar ambas propiedades y quitar las restricciones que estas poseen. Se comportara como un elemento de linea pero podremos agregarle propiedades de un elemento de bloque.
No serviria, por ejemplo, para asignarle un margen, padding, etc. A un elemento "inline".  

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

			11. Selectores en CSS